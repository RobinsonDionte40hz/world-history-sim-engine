.container {
  display: flex;
  flex-direction: column;
  height: 100%;
  background-color: var(--background-color);
  color: var(--text-color);
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 2rem;
  background-color: var(--surface-color);
  border-bottom: 1px solid var(--border-color);
}

.header h1 {
  margin: 0;
  font-size: 1.5rem;
  font-weight: 600;
}

.viewControls {
  display: flex;
  gap: 0.5rem;
}

.viewButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 6px;
  background-color: var(--background-color);
  color: var(--text-color);
  cursor: pointer;
  transition: all 0.2s ease;
}

.viewButton:hover {
  background-color: var(--hover-color);
}

.viewButton.active {
  background-color: var(--primary-color);
  color: white;
}

.content {
  flex: 1;
  padding: 1rem;
  overflow-y: auto;
}

/* World View */
.worldView {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.worldHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.worldHeader h2 {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin: 0;
  font-size: 1.25rem;
}

.worldControls {
  display: flex;
  gap: 0.5rem;
}

.settingsButton,
.generateButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.settingsButton {
  background-color: var(--surface-color);
  color: var(--text-color);
}

.settingsButton:hover {
  background-color: var(--hover-color);
}

.generateButton {
  background-color: var(--primary-color);
  color: white;
}

.generateButton:hover {
  background-color: var(--primary-hover);
}

.generateButton:disabled {
  background-color: var(--disabled-color);
  cursor: not-allowed;
}

.settingsPanel {
  padding: 1rem;
  background-color: var(--surface-color);
  border-radius: 8px;
  border: 1px solid var(--border-color);
}

.settingsPanel h3 {
  margin: 0 0 1rem 0;
  font-size: 1.1rem;
}

.settingsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
}

.settingGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.settingGroup label {
  font-size: 0.9rem;
  color: var(--text-secondary);
}

.settingGroup input {
  padding: 0.5rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  background-color: var(--input-background);
  color: var(--text-color);
}

.noWorld {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2rem;
  padding: 2rem;
  text-align: center;
}

.noWorldContent {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.noWorldContent h3 {
  margin: 0;
  font-size: 1.5rem;
}

.noWorldContent p {
  margin: 0;
  color: var(--text-secondary);
}

.worldContent {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.worldStats {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
}

.statCard {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  background-color: var(--surface-color);
  border-radius: 8px;
  border: 1px solid var(--border-color);
}

.statInfo {
  display: flex;
  flex-direction: column;
}

.statValue {
  font-size: 1.5rem;
  font-weight: 600;
}

.statLabel {
  font-size: 0.9rem;
  color: var(--text-secondary);
}

.simulationControls {
  display: flex;
  gap: 0.5rem;
}

.simulateButton,
.saveButton,
.loadButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.simulateButton {
  background-color: var(--primary-color);
  color: white;
}

.simulateButton:hover {
  background-color: var(--primary-hover);
}

.saveButton {
  background-color: var(--success-color);
  color: white;
}

.saveButton:hover {
  background-color: var(--success-hover);
}

.loadButton {
  background-color: var(--surface-color);
  color: var(--text-color);
}

.loadButton:hover {
  background-color: var(--hover-color);
}

.progressContainer {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.progressBar {
  height: 8px;
  background-color: var(--surface-color);
  border-radius: 4px;
  overflow: hidden;
}

.progressFill {
  height: 100%;
  background-color: var(--primary-color);
  transition: width 0.3s ease;
}

.progressInfo {
  display: flex;
  justify-content: space-between;
  font-size: 0.9rem;
  color: var(--text-secondary);
}

/* History View */
.historyView {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.historyHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.historyHeader h2 {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin: 0;
  font-size: 1.25rem;
}

.historyFilters {
  display: flex;
  gap: 1rem;
}

.filterSelect,
.searchInput {
  padding: 0.5rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  background-color: var(--input-background);
  color: var(--text-color);
}

.eventsTimeline {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.eventCard {
  padding: 1rem;
  background-color: var(--surface-color);
  border-radius: 8px;
  border: 1px solid var(--border-color);
}

.eventHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
}

.eventType {
  padding: 0.25rem 0.5rem;
  background-color: var(--primary-color);
  color: white;
  border-radius: 4px;
  font-size: 0.9rem;
}

.eventTime {
  color: var(--text-secondary);
  font-size: 0.9rem;
}

.eventContent {
  margin-bottom: 1rem;
}

.eventDescription {
  margin: 0 0 1rem 0;
  line-height: 1.5;
}

.eventParticipants {
  margin-top: 1rem;
}

.eventParticipants h4 {
  margin: 0 0 0.5rem 0;
  font-size: 0.9rem;
  color: var(--text-secondary);
}

.eventParticipants ul {
  margin: 0;
  padding-left: 1.5rem;
}

.eventFooter {
  display: flex;
  justify-content: space-between;
  font-size: 0.9rem;
  color: var(--text-secondary);
}

/* Analysis View */
.analysisView {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.analysisView h2 {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin: 0;
  font-size: 1.25rem;
}

.analysisContent {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.analysisSummary {
  padding: 1rem;
  background-color: var(--surface-color);
  border-radius: 8px;
  border: 1px solid var(--border-color);
}

.analysisSummary h3 {
  margin: 0 0 1rem 0;
  font-size: 1.1rem;
}

.summaryStats {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 1rem;
}

.summaryStat {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.analysisDetails {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
}

.analysisSection {
  padding: 1rem;
  background-color: var(--surface-color);
  border-radius: 8px;
  border: 1px solid var(--border-color);
}

.analysisSection h3 {
  margin: 0 0 1rem 0;
  font-size: 1.1rem;
}

.attributeChart,
.personalityChart {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.attributeBar,
.personalityBar {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.attributeName,
.traitName {
  width: 120px;
  font-size: 0.9rem;
}

.barContainer {
  flex: 1;
  height: 8px;
  background-color: var(--background-color);
  border-radius: 4px;
  overflow: hidden;
}

.barFill {
  height: 100%;
  background-color: var(--primary-color);
  transition: width 0.3s ease;
}

.attributeValue,
.traitValue {
  width: 60px;
  text-align: right;
  font-size: 0.9rem;
  color: var(--text-secondary);
}

/* Notifications */
.notifications {
  position: fixed;
  bottom: 1rem;
  right: 1rem;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  z-index: 1000;
}

.notification {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  background-color: var(--surface-color);
  border-radius: 6px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  animation: slideIn 0.3s ease;
}

.notification.success {
  border-left: 4px solid var(--success-color);
}

.notification.error {
  border-left: 4px solid var(--error-color);
}

.notification.info {
  border-left: 4px solid var(--info-color);
}

@keyframes slideIn {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

/* System Info */
.systemInfo {
  width: 100%;
  max-width: 600px;
  padding: 1.5rem;
  background-color: var(--surface-color);
  border-radius: 8px;
  border: 1px solid var(--border-color);
}

.systemInfo h3 {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin: 0 0 1.5rem 0;
  font-size: 1.2rem;
}

.infoSection {
  margin-bottom: 1.5rem;
}

.infoSection:last-child {
  margin-bottom: 0;
}

.infoSection h4 {
  margin: 0 0 0.75rem 0;
  font-size: 1rem;
  color: var(--text-secondary);
}

.infoSection p {
  margin: 0 0 0.75rem 0;
  color: var(--text-secondary);
}

.infoSection ul {
  margin: 0;
  padding-left: 1.5rem;
}

.infoSection li {
  margin-bottom: 0.5rem;
  line-height: 1.5;
}

.infoSection li:last-child {
  margin-bottom: 0;
}

.infoSection strong {
  color: var(--text-color);
}

/* Dark mode specific styles */
@media (prefers-color-scheme: dark) {
  .container,
  .header h1,
  .viewButton,
  .worldHeader h2,
  .settingsButton,
  .noWorldContent h3,
  .statValue,
  .simulateButton,
  .saveButton,
  .loadButton,
  .historyHeader h2,
  .eventType,
  .eventDescription,
  .analysisView h2,
  .analysisSummary h3,
  .analysisSection h3,
  .attributeName,
  .traitName,
  .infoSection strong {
    color: #ffffff !important;
  }

  .settingGroup label,
  .settingGroup input,
  .noWorldContent p,
  .statLabel,
  .progressInfo,
  .eventTime,
  .eventParticipants h4,
  .eventFooter,
  .infoSection h4,
  .infoSection p,
  .attributeValue,
  .traitValue {
    color: #a0a0a0 !important;
  }
}

/* Light mode specific styles */
@media (prefers-color-scheme: light) {
  .container,
  .header h1,
  .viewButton,
  .worldHeader h2,
  .settingsButton,
  .noWorldContent h3,
  .statValue,
  .simulateButton,
  .saveButton,
  .loadButton,
  .historyHeader h2,
  .eventType,
  .eventDescription,
  .analysisView h2,
  .analysisSummary h3,
  .analysisSection h3,
  .attributeName,
  .traitName,
  .infoSection strong {
    color: #000000 !important;
  }

  .settingGroup label,
  .settingGroup input,
  .noWorldContent p,
  .statLabel,
  .progressInfo,
  .eventTime,
  .eventParticipants h4,
  .eventFooter,
  .infoSection h4,
  .infoSection p,
  .attributeValue,
  .traitValue {
    color: #666666 !important;
  }
} 